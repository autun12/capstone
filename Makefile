# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES +=
INCLUDES += -Iinclude
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = bin/Debug-linux-x86_64/Capstone
TARGET = $(TARGETDIR)/libCapstone.a
OBJDIR = bin-int/Debug-linux-x86_64/Capstone
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = bin/Release-linux-x86_64/Capstone
TARGET = $(TARGETDIR)/libCapstone.a
OBJDIR = bin-int/Release-linux-x86_64/Capstone
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = bin/Dist-linux-x86_64/Capstone
TARGET = $(TARGETDIR)/libCapstone.a
OBJDIR = bin-int/Dist-linux-x86_64/Capstone
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/AArch64BaseInfo.o
GENERATED += $(OBJDIR)/AArch64Disassembler.o
GENERATED += $(OBJDIR)/AArch64InstPrinter.o
GENERATED += $(OBJDIR)/AArch64Mapping.o
GENERATED += $(OBJDIR)/AArch64Module.o
GENERATED += $(OBJDIR)/ARMDisassembler.o
GENERATED += $(OBJDIR)/ARMInstPrinter.o
GENERATED += $(OBJDIR)/ARMMapping.o
GENERATED += $(OBJDIR)/ARMModule.o
GENERATED += $(OBJDIR)/EVMDisassembler.o
GENERATED += $(OBJDIR)/EVMInstPrinter.o
GENERATED += $(OBJDIR)/EVMMapping.o
GENERATED += $(OBJDIR)/EVMModule.o
GENERATED += $(OBJDIR)/M680XDisassembler.o
GENERATED += $(OBJDIR)/M680XInstPrinter.o
GENERATED += $(OBJDIR)/M680XModule.o
GENERATED += $(OBJDIR)/M68KDisassembler.o
GENERATED += $(OBJDIR)/M68KInstPrinter.o
GENERATED += $(OBJDIR)/M68KModule.o
GENERATED += $(OBJDIR)/MCInst.o
GENERATED += $(OBJDIR)/MCInstrDesc.o
GENERATED += $(OBJDIR)/MCRegisterInfo.o
GENERATED += $(OBJDIR)/MOS65XXDisassembler.o
GENERATED += $(OBJDIR)/MOS65XXModule.o
GENERATED += $(OBJDIR)/MipsDisassembler.o
GENERATED += $(OBJDIR)/MipsInstPrinter.o
GENERATED += $(OBJDIR)/MipsMapping.o
GENERATED += $(OBJDIR)/MipsModule.o
GENERATED += $(OBJDIR)/PPCDisassembler.o
GENERATED += $(OBJDIR)/PPCInstPrinter.o
GENERATED += $(OBJDIR)/PPCMapping.o
GENERATED += $(OBJDIR)/PPCModule.o
GENERATED += $(OBJDIR)/SStream.o
GENERATED += $(OBJDIR)/SparcDisassembler.o
GENERATED += $(OBJDIR)/SparcInstPrinter.o
GENERATED += $(OBJDIR)/SparcMapping.o
GENERATED += $(OBJDIR)/SparcModule.o
GENERATED += $(OBJDIR)/SystemZDisassembler.o
GENERATED += $(OBJDIR)/SystemZInstPrinter.o
GENERATED += $(OBJDIR)/SystemZMCTargetDesc.o
GENERATED += $(OBJDIR)/SystemZMapping.o
GENERATED += $(OBJDIR)/SystemZModule.o
GENERATED += $(OBJDIR)/TMS320C64xDisassembler.o
GENERATED += $(OBJDIR)/TMS320C64xInstPrinter.o
GENERATED += $(OBJDIR)/TMS320C64xMapping.o
GENERATED += $(OBJDIR)/TMS320C64xModule.o
GENERATED += $(OBJDIR)/X86ATTInstPrinter.o
GENERATED += $(OBJDIR)/X86Disassembler.o
GENERATED += $(OBJDIR)/X86DisassemblerDecoder.o
GENERATED += $(OBJDIR)/X86IntelInstPrinter.o
GENERATED += $(OBJDIR)/X86Mapping.o
GENERATED += $(OBJDIR)/X86Module.o
GENERATED += $(OBJDIR)/XCoreDisassembler.o
GENERATED += $(OBJDIR)/XCoreInstPrinter.o
GENERATED += $(OBJDIR)/XCoreMapping.o
GENERATED += $(OBJDIR)/XCoreModule.o
GENERATED += $(OBJDIR)/cs.o
GENERATED += $(OBJDIR)/utils.o
OBJECTS += $(OBJDIR)/AArch64BaseInfo.o
OBJECTS += $(OBJDIR)/AArch64Disassembler.o
OBJECTS += $(OBJDIR)/AArch64InstPrinter.o
OBJECTS += $(OBJDIR)/AArch64Mapping.o
OBJECTS += $(OBJDIR)/AArch64Module.o
OBJECTS += $(OBJDIR)/ARMDisassembler.o
OBJECTS += $(OBJDIR)/ARMInstPrinter.o
OBJECTS += $(OBJDIR)/ARMMapping.o
OBJECTS += $(OBJDIR)/ARMModule.o
OBJECTS += $(OBJDIR)/EVMDisassembler.o
OBJECTS += $(OBJDIR)/EVMInstPrinter.o
OBJECTS += $(OBJDIR)/EVMMapping.o
OBJECTS += $(OBJDIR)/EVMModule.o
OBJECTS += $(OBJDIR)/M680XDisassembler.o
OBJECTS += $(OBJDIR)/M680XInstPrinter.o
OBJECTS += $(OBJDIR)/M680XModule.o
OBJECTS += $(OBJDIR)/M68KDisassembler.o
OBJECTS += $(OBJDIR)/M68KInstPrinter.o
OBJECTS += $(OBJDIR)/M68KModule.o
OBJECTS += $(OBJDIR)/MCInst.o
OBJECTS += $(OBJDIR)/MCInstrDesc.o
OBJECTS += $(OBJDIR)/MCRegisterInfo.o
OBJECTS += $(OBJDIR)/MOS65XXDisassembler.o
OBJECTS += $(OBJDIR)/MOS65XXModule.o
OBJECTS += $(OBJDIR)/MipsDisassembler.o
OBJECTS += $(OBJDIR)/MipsInstPrinter.o
OBJECTS += $(OBJDIR)/MipsMapping.o
OBJECTS += $(OBJDIR)/MipsModule.o
OBJECTS += $(OBJDIR)/PPCDisassembler.o
OBJECTS += $(OBJDIR)/PPCInstPrinter.o
OBJECTS += $(OBJDIR)/PPCMapping.o
OBJECTS += $(OBJDIR)/PPCModule.o
OBJECTS += $(OBJDIR)/SStream.o
OBJECTS += $(OBJDIR)/SparcDisassembler.o
OBJECTS += $(OBJDIR)/SparcInstPrinter.o
OBJECTS += $(OBJDIR)/SparcMapping.o
OBJECTS += $(OBJDIR)/SparcModule.o
OBJECTS += $(OBJDIR)/SystemZDisassembler.o
OBJECTS += $(OBJDIR)/SystemZInstPrinter.o
OBJECTS += $(OBJDIR)/SystemZMCTargetDesc.o
OBJECTS += $(OBJDIR)/SystemZMapping.o
OBJECTS += $(OBJDIR)/SystemZModule.o
OBJECTS += $(OBJDIR)/TMS320C64xDisassembler.o
OBJECTS += $(OBJDIR)/TMS320C64xInstPrinter.o
OBJECTS += $(OBJDIR)/TMS320C64xMapping.o
OBJECTS += $(OBJDIR)/TMS320C64xModule.o
OBJECTS += $(OBJDIR)/X86ATTInstPrinter.o
OBJECTS += $(OBJDIR)/X86Disassembler.o
OBJECTS += $(OBJDIR)/X86DisassemblerDecoder.o
OBJECTS += $(OBJDIR)/X86IntelInstPrinter.o
OBJECTS += $(OBJDIR)/X86Mapping.o
OBJECTS += $(OBJDIR)/X86Module.o
OBJECTS += $(OBJDIR)/XCoreDisassembler.o
OBJECTS += $(OBJDIR)/XCoreInstPrinter.o
OBJECTS += $(OBJDIR)/XCoreMapping.o
OBJECTS += $(OBJDIR)/XCoreModule.o
OBJECTS += $(OBJDIR)/cs.o
OBJECTS += $(OBJDIR)/utils.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Capstone
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Capstone
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/MCInst.o: MCInst.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MCInstrDesc.o: MCInstrDesc.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MCRegisterInfo.o: MCRegisterInfo.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SStream.o: SStream.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AArch64BaseInfo.o: arch/AArch64/AArch64BaseInfo.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AArch64Disassembler.o: arch/AArch64/AArch64Disassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AArch64InstPrinter.o: arch/AArch64/AArch64InstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AArch64Mapping.o: arch/AArch64/AArch64Mapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AArch64Module.o: arch/AArch64/AArch64Module.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ARMDisassembler.o: arch/ARM/ARMDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ARMInstPrinter.o: arch/ARM/ARMInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ARMMapping.o: arch/ARM/ARMMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ARMModule.o: arch/ARM/ARMModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EVMDisassembler.o: arch/EVM/EVMDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EVMInstPrinter.o: arch/EVM/EVMInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EVMMapping.o: arch/EVM/EVMMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EVMModule.o: arch/EVM/EVMModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/M680XDisassembler.o: arch/M680X/M680XDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/M680XInstPrinter.o: arch/M680X/M680XInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/M680XModule.o: arch/M680X/M680XModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/M68KDisassembler.o: arch/M68K/M68KDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/M68KInstPrinter.o: arch/M68K/M68KInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/M68KModule.o: arch/M68K/M68KModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MOS65XXDisassembler.o: arch/MOS65XX/MOS65XXDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MOS65XXModule.o: arch/MOS65XX/MOS65XXModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MipsDisassembler.o: arch/Mips/MipsDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MipsInstPrinter.o: arch/Mips/MipsInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MipsMapping.o: arch/Mips/MipsMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MipsModule.o: arch/Mips/MipsModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PPCDisassembler.o: arch/PowerPC/PPCDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PPCInstPrinter.o: arch/PowerPC/PPCInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PPCMapping.o: arch/PowerPC/PPCMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PPCModule.o: arch/PowerPC/PPCModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SparcDisassembler.o: arch/Sparc/SparcDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SparcInstPrinter.o: arch/Sparc/SparcInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SparcMapping.o: arch/Sparc/SparcMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SparcModule.o: arch/Sparc/SparcModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SystemZDisassembler.o: arch/SystemZ/SystemZDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SystemZInstPrinter.o: arch/SystemZ/SystemZInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SystemZMCTargetDesc.o: arch/SystemZ/SystemZMCTargetDesc.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SystemZMapping.o: arch/SystemZ/SystemZMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SystemZModule.o: arch/SystemZ/SystemZModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TMS320C64xDisassembler.o: arch/TMS320C64x/TMS320C64xDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TMS320C64xInstPrinter.o: arch/TMS320C64x/TMS320C64xInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TMS320C64xMapping.o: arch/TMS320C64x/TMS320C64xMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TMS320C64xModule.o: arch/TMS320C64x/TMS320C64xModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/X86ATTInstPrinter.o: arch/X86/X86ATTInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/X86Disassembler.o: arch/X86/X86Disassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/X86DisassemblerDecoder.o: arch/X86/X86DisassemblerDecoder.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/X86IntelInstPrinter.o: arch/X86/X86IntelInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/X86Mapping.o: arch/X86/X86Mapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/X86Module.o: arch/X86/X86Module.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XCoreDisassembler.o: arch/XCore/XCoreDisassembler.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XCoreInstPrinter.o: arch/XCore/XCoreInstPrinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XCoreMapping.o: arch/XCore/XCoreMapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XCoreModule.o: arch/XCore/XCoreModule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cs.o: cs.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utils.o: utils.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif